apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  type: NodePort
  selector:
    app: web
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: web
  replicas: 1
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: nginx
        image: registry.hub.docker.com/library/nginx:1.19.1
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-conf
        - mountPath: /var/log/nginx
          name: log
        - mountPath: /var/cache/nginx/proxy_cache
          name: cache
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: log
        emptyDir: {}
      - name: cache
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes 2;
    pid /var/run/nginx.pid;

    events {
        worker_connections 768;
    }

    http {

        ##
        # Cache Settings
        ##
        proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=biblers_cache:10m max_size=1G inactive=1w use_temp_path=off;

        ##
        # Basic Settings
        ##
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        #keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        default_type application/octet-stream;

        ##
        # Logging Settings
        ##
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##
        gzip on;
        gzip_disable "msie6";
        gzip_min_length 1100;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json text/xml application/xml text/javascript image/svg+xml;

        ##
        # DDOS Protection
        ##
        client_header_timeout 10;
        client_body_timeout 10;
        keepalive_timeout 10 10;
        send_timeout 10;

        upstream app {
            server biblers:8080;
        }

        server {
            listen 80 default_server;
            listen [::]:80 default_server;

            server_name k8s.bible.rs;

            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

            location / {
                expires 14d;
                add_header pragma public;
                add_header cache-control "public";

                proxy_cache biblers_cache;
                proxy_cache_valid 10m;
                proxy_cache_revalidate on;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                proxy_cache_background_update on;
                proxy_cache_lock on;

                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://app;
            }

            location = /static/js/sw.js {
                expires 1d;
                add_header pragma public;
                add_header cache-control "public";

                proxy_no_cache 1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://app;

                add_header Service-Worker-Allowed /;
            }

            location = /robots.txt {
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://app/static;
            }

            location = /sitemap.xml {
               proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://app/static;
            }
        }
    }
